@mixin generate-select-styles {
  :global {
    width: getSelectSizes(select-global-width);
    box-sizing: border-box;
    position: relative;
    margin-bottom: getSelectSizes(select-global-margin-bottom);

    .react-select {
      &__indicator {
        margin: getSelectSizes(select-margin);
        position: absolute;
        top: 0;
        right: 0;
      }

      &__single-value {
        font-size: getSelectSizes(select-single-value-font-size);
        margin: getSelectSizes(select-single-value-margin);
      }

      &__menu {
        position: absolute;
        top: getSelectSizes(select-menu-position-top);
        box-sizing: border-box;
        z-index: 9999;
        width: getSelectSizes(select-menu-width);
        max-height: getSelectSizes(select-menu-max-height);
        // min-height: getSelectSizes(select-menu-min-height);
        @include theme(background-color, primary--color);
        @include theme(box-shadow, box-shadow-color, 3px 3px 6px 0);
        border-radius: getSelectSizes(select-menu-border-radius);
      }

      &__menu-list {
        width: getSelectSizes(select-menu-list-width);
        @include theme(background-color, primary--color);
        max-height: getSelectSizes(select-menu-list-height);
        border-radius: getSelectSizes(select-menu-border-radius);
      }

      &__menu-notice {
        width: getSelectSizes(select-notice-width);
        padding: getSelectSizes(select-notice-padding);
        font-size: getSelectSizes(select-notice-font-size);
        box-sizing: border-box;
      }

      &__menu-list--is-multi {
        max-height: getSelectSizes(select-menu-is-multi-height);
      }

      &__option {
        height: getSelectSizes(select-menu-option-height);
        cursor: pointer;
        @include flex(null, center);
        @include theme(border-bottom, select-option-divider-color, solid 1px);

        &:hover {
          margin: 0;
          @include theme(background-color, primary, $opacity: 0.1);
        }

        label {
          height: getSelectSizes(select-menu-option-label-height);
          @include flex(null, center);
          @include theme(color, black-color);
          margin-left: getSelectSizes(select-menu-option-label-margin-left);
          font-size: getSelectSizes(select-menu-option-label-font-size);
        }
        span {
          height: getSelectSizes(select-menu-option-label-span-height);
          margin-left: getSelectSizes(select-menu-option-label-span-margin);
          font-size: getSelectSizes(select-menu-option-label-span-font-size);
          @include flex(null, center);
          @include theme(color, black-color);
        }

        label,
        span {
          word-break: break-all;
          width: getSelectSizes(select-menu-option-label-span-width);
          @include dots-after-text();
          display: inline-block;
          cursor: pointer;
        }

        div {
          @include flex(center, center);
          width: getSelectSizes(select-menu-option-block-width);
          height: getSelectSizes(select-menu-option-block-height);
        }
      }

      &__value-container {
        @include flex();
        position: absolute;
        top: 0;
        margin: getSelectSizes(select-value-container-margin);
      }
      &__multi-value {
        margin-left: getSelectSizes(select-multi-value-margin);
        font-size: getSelectSizes(select-multi-value-font-size);
        @include flex();
      }

      &__menu-notice {
        width: 100%;
        padding: getSelectSizes(select-multi-menu-notice-padding);
        font-size: getSelectSizes(select-multi-menu-notice-font-size);
      }

      &__input {
        font-size: getSelectSizes(select-multi-input-font-size) !important;
      }
    }
  }
}

@mixin generate-full-width-select-styles {
  :global {
    width: 100%;

    .react-select {
      &__menu {
        width: 100%;
      }

      &__menu-list {
        width: 100%;
      }

      &__menu-notice {
        width: getSelectSizes(select-notice-width);
        padding: getSelectSizes(select-notice-padding);
        font-size: getSelectSizes(select-notice-font-size);
        box-sizing: border-box;
      }
    }
  }
}

@mixin generate-dropdown-select-styles {
  position: relative;
  :global {
    .react-select__menu {
      width: getSelectSizes(dropdown-select-width);
      max-height: getSelectSizes(dropdown-select-max-height);
      min-height: getSelectSizes(dropdown-select-min-height);
      box-sizing: border-box;

      .react-select__menu-list {
        margin-top: getSelectSizes(dropdown-select-menu-list-margin);
        width: getSelectSizes(dropdown-select-menu-list-width);
        max-height: getSelectSizes(dropdown-select-menu-list-max-height);
        min-height: getSelectSizes(dropdown-select-menu-list-in-height);
        border-radius: getSelectSizes(dropdown-select-menu-list-border-radius);

        .react-select__menu-notice {
          width: getSelectSizes(select-notice-width);
          padding: getSelectSizes(select-notice-padding);
          font-size: getSelectSizes(select-notice-font-size);
          box-sizing: border-box;
        }

        .react-select__option {
          width: getSelectSizes(dropdown-select-option-width);
          margin: getSelectSizes(dropdown-select-option-margin);
          box-sizing: border-box;

          span,
          label {
            height: getSelectSizes(dropdown-select-option-label-height);
          }

          &:hover {
            width: getSelectSizes(dropdown-select-option-label-hover-width);
            margin: 0;
            padding-left: getSelectSizes(dropdown-select-option-label-block-margin);

            &:first-child {
              border-radius: none;
            }
          }
        }
      }
    }
  }
}

@mixin generate-with-clear-select-styles {
  :global {
    .react-select {
      &__menu-list {
        padding-bottom: getSelectSizes(clear-select-padding);
        box-sizing: border-box;
      }
    }
  }
}

@mixin select-dropdown-elements {
  .Select--dropdown-control-icon {
    width: getSelectSizes(select-dropdown-control-icon-width);
    height: getSelectSizes(select-dropdown-control-icon-height);
    @include flex(center, center);
  }

  .Select--dropdown-control-label {
    height: getSelectSizes(select-dropdown-control-label-height);
    margin-left: getSelectSizes(select-dropdown-control-label-margin-left);
    font-size: getSelectSizes(select-dropdown-control-label-font-size);
    letter-spacing: getSelectSizes(select-dropdown-control-label-letter-spacing);
    font-weight: 500;
  }

  .Select--dropdown--input {
    @include theme(border-bottom, select-dropdown-input-border-bottom-color, solid 1px);
    position: absolute;
    top: 0;
    z-index: 1000000000;
    width: getSelectSizes(select-dropdown-input-width);
    height: getSelectSizes(select-dropdown-input-height);
    border-radius: getSelectSizes(select-dropdown-input-border-radius);
    @include theme(background-color, select-dropdown-input-bg-color);

    > input {
      box-sizing: border-box;
      width: 100%;
      height: 100%;
      border: none;
      outline: none;
      font-family: $base-font-family;
      font-size: getSelectSizes(select-dropdown-input-input-font-size);
      padding: getSelectSizes(select-dropdown-input-input-padding);
      border-radius: getSelectSizes(select-dropdown-input-input-border-radius);
      @include theme(color, select-dropdown-input-input-color);

      &::placeholder {
        font-family: $base-font-family;
        font-size: getSelectSizes(select-dropdown-input-input-placeholder-font-size);
        opacity: 0.4;
        @include theme(color, select-dropdown-input-input-placeholder-color);
      }
    }
    > span {
      position: absolute;
      top: getSelectSizes(select-dropdown-input-span-top);
      right: getSelectSizes(select-dropdown-input-span-right);
      width: getSelectSizes(select-dropdown-input-span-width);
      height: getSelectSizes(select-dropdown-input-span-height);
      opacity: 0.4;
      @include theme(color, select-dropdown-input-input-span-color);
    }
  }

  .DISABLED {
    @include p('abs');
    width: 100%;
    height: 100%;
    z-index: 99999999999999999999;
  }

  .AllOption {
    &:first-child {
      > div {
        border-bottom: none;
        &:hover {
          @include theme(background-color, select-dropdown-all-option-first-child-hover-bg-color);
          border-radius: getSelectSizes(select-dropdown-all-option-first-child-hover-border-radius);
        }
      }
    }
  }

  &--custom-option {
    &:first-child {
      margin: 0;
      > div {
        padding-left: getSelectSizes(select-dropdown-custom-option-first-child-div-padding-left);
      }
    }
    margin: getSelectSizes(select-dropdown-custom-option-margin);

    &:hover {
      margin: 0;
      > div {
        padding-left: getSelectSizes(select-dropdown-custom-option-hover-div);
      }
    }
  }

  .Select--icon-container {
    display: flex;
    font-size: 0;
  }

  .Select--clear-button {
    @include flex(null, center);
    width: 100%;
    position: absolute;
    z-index: 999999;
    bottom: getSelectSizes(select-clear-button-bottom);
    height: getSelectSizes(select-clear-button-height);
    border-radius: getSelectSizes(select-clear-button-border-radius);
    @include theme(background-color, select-clear-button-bg-color);
    cursor: pointer;
    div {
      width: getSelectSizes(select-clear-button-div-width);
      height: getSelectSizes(select-clear-button-div-height) !important;
      margin-left: getSelectSizes(select-clear-button-div-margin-left);
      @include theme(color, select-clear-button-div-color);
    }
    span {
      height: getSelectSizes(select-clear-button-span-height);
      font-size: getSelectSizes(select-clear-button-span-font-size);
      padding-left: getSelectSizes(select-clear-button-span-padding-left);
      @include theme(color, select-clear-button-span-color);
      @include dots-after-text;
    }
  }
}

// select-dropdown-separate
@mixin select-dropdown-separate {
  .ClearIcon-Cell {
    @include flex(center, center);
    font-size: 0;
  }

  .DropdownArrow {
    @include theme(fill, select-drop-down-arrow-svg-fill);
  }

  .SelectDropdownSearchIconCell {
    display: inline-flex;
    justify-content: center;
    align-items: center;
  }
}

// select-box
@mixin select-box {
  .Select {
    position: relative;

    // TREE END
    .Select--search {
      width: getSelectSizes(select-search-width);
    }
    //
    &--dropdown-control {
      @include theme(color, black-color);
      @include flex(null, center);
      cursor: pointer;

      @each $color in $base-colors {
        &--#{$color} {
          @include theme(color, #{$color});
        }
      }
    }

    // this so that the filter is closed, the label and icon must be of this color

    .Select--iconClose {
      @include theme(color, black-color);
    }

    .Select--labelClose {
      @include theme(color, black-color);
    }

    @include select-dropdown-elements;
    @include generate-select-styles;

    &--fullWidth {
      width: 100%;

      .AllOption {
        &:first-child {
          width: 100%;
        }
      }

      .Select--search,
      .Select--clear-button {
        width: 100%;
      }

      @include generate-full-width-select-styles;
    }

    &--dropdown {
      @include generate-dropdown-select-styles;
    }

    &--with-clear {
      @include generate-with-clear-select-styles;
    }

    :global {
      .MyUI-TextInputEndIcon {
        cursor: pointer;
      }
    }
  }

  @include select-dropdown-separate;
}
