@mixin generate-select-styles {
  :global {
    width: getSelectSizes(select-global-width);
    box-sizing: border-box;
    position: relative;
    margin-bottom: getSelectSizes(select-global-margin-bottom);

    .react-select {
      &__indicator {
        color: #00194c;
        margin: getSelectSizes(my-ui-select-margin);
        position: absolute;
        top: 0;
        right: 0;
      }
      &__single-value {
        font-size: getSelectSizes(my-ui-single-value-font-size);
        margin: getSelectSizes(my-ui-single-value-margin);
      }

      &__menu {
        position: absolute;
        top: getSelectSizes(my-ui-menu-position-top);
        box-sizing: border-box;
        z-index: 9999;
        width: getSelectSizes(my-ui-menu-width);
        max-height: getSelectSizes(my-ui-menu-max-height);
        min-height: getSelectSizes(my-ui-menu-min-height);
        @include theme(background-color, primary--color);
        box-shadow: 0.3rem 0.3rem 0.6rem 0 rgba(0, 0, 0, 0.05);
        border-radius: getSelectSizes(my-ui-menu-border-radius);
      }

      &__menu-list {
        width: getSelectSizes(my-ui-menu-list-width);
        @include theme(background-color, primary--color);
        max-height: getSelectSizes(my-ui-menu-list-height);
        border-radius: getSelectSizes(my-ui-menu-border-radius);
      }

      &__menu-notice {
        width: getSelectSizes(my-ui-notice-width);
        padding: getSelectSizes(my-ui-notice-padding);
        font-size: getSelectSizes(my-ui-notice-font-size);
        box-sizing: border-box;
      }

      &__menu-list--is-multi {
        max-height: getSelectSizes(my-ui-menu-is-multi-height);
      }

      &__option {
        height: getSelectSizes(my-ui-menu-option-height);
        @include flex(null, center);
        border-bottom: solid 1px #f9f9f9;

        &:hover {
          margin: 0;
          background-color: rgba(60, 84, 178, 0.1);
        }

        label {
          height: getSelectSizes(my-ui-menu-option-label-height);
          @include flex(null, center);
          @include theme(color, black-color);
          margin-left: getSelectSizes(my-ui-menu-option-label-margin-left);
          font-size: getSelectSizes(my-ui-menu-option-label-font-size);
        }
        span {
          height: getSelectSizes(my-ui-menu-option-label-span-height);
          margin-left: getSelectSizes(my-ui-menu-option-label-span-margin);
          font-size: getSelectSizes(my-ui-menu-option-label-span-font-size);
          @include flex(null, center);
          @include theme(color, black-color);
        }

        label,
        span {
          word-break: break-all;
          width: getSelectSizes(my-ui-menu-option-label-span-width);
          @include dots-after-text();
          display: inline-block;
        }

        div {
          @include flex(center, center);
          width: getSelectSizes(my-ui-menu-option-block-width);
          height: getSelectSizes(my-ui-menu-option-block-height);
        }
      }

      &__value-container {
        @include flex();
        position: absolute;
        top: 0;
        margin: getSelectSizes(my-ui-value-container-margin);
      }
      &__multi-value {
        margin-left: getSelectSizes(my-ui-multi-value-margin);
        font-size: getSelectSizes(my-ui-multi-value-font-size);
        background-color: gray;
        @include flex();
      }

      &__menu-notice {
        width: 100%;
        padding: getSelectSizes(my-ui-multi-menu-notice-padding);
        font-size: getSelectSizes(my-ui-multi-menu-notice-font-size);
      }

      &__input {
        font-size: getSelectSizes(my-ui-multi-input-font-size) !important;
      }
    }
  }
}

@mixin generate-full-width-select-styles {
  :global {
    width: 100%;

    .react-select {
      &__menu {
        width: 100%;
      }

      &__menu-list {
        width: 100%;
      }

      &__menu-notice {
        width: getSelectSizes(my-ui-notice-width);
        padding: getSelectSizes(my-ui-notice-padding);
        font-size: getSelectSizes(my-ui-notice-font-size);
        box-sizing: border-box;
      }
    }
  }
}

@mixin generate-dropdown-select-styles {
  position: relative;
  :global {
    .react-select__menu {
      width: getSelectSizes(dropdown-select-width);
      max-height: getSelectSizes(dropdown-select-max-height);
      min-height: getSelectSizes(dropdown-select-min-height);
      box-sizing: border-box;

      .react-select__menu-list {
        margin-top: getSelectSizes(dropdown-select-menu-list-margin);
        width: getSelectSizes(dropdown-select-menu-list-width);
        max-height: getSelectSizes(dropdown-select-menu-list-max-height);
        min-height: getSelectSizes(dropdown-select-menu-list-in-height);
        border-radius: getSelectSizes(dropdown-select-menu-list-border-radius);

        .react-select__menu-notice {
          width: getSelectSizes(my-ui-notice-width);
          padding: getSelectSizes(my-ui-notice-padding);
          font-size: getSelectSizes(my-ui-notice-font-size);
          box-sizing: border-box;
        }

        .react-select__option {
          width: getSelectSizes(dropdown-select-option-width);
          margin: getSelectSizes(dropdown-select-option-margin);
          span,
          label {
            height: getSelectSizes(dropdown-select-option-label-height);
          }

          &:hover {
            width: getSelectSizes(dropdown-select-option-label-hover-width);
            margin: 0;

            &:first-child {
              border-radius: none;
            }

            div {
              margin-left: getSelectSizes(dropdown-select-option-label-block-margin);
            }
          }
        }
      }
    }
  }
}

@mixin generate-with-clear-select-styles {
  :global {
    .react-select {
      &__menu-list {
        padding-bottom: getSelectSizes(clear-select-padding);
        box-sizing: border-box;
      }
    }
  }
}
