@mixin generate-loadingindicator-styles {
  .LoadingIndicatorCircle {
    position: relative;
    width: getLoadingIndicatorSizes(base-timer-circle-width);
    height: getLoadingIndicatorSizes(base-timer-circle-height);
    &__svg {
      transform: scaleX(1);
    }

    &__circle {
      stroke: transparent;
    }

    &__path-elapsed {
      stroke-width: getLoadingIndicatorSizes(path-elapsed-width);
      transition: getLoadingIndicatorSizes(transition-all-indicator);
      stroke-width: getLoadingIndicatorSizes(path-elapsed-stroke-width);
      @include theme(fill, primary, $opacity: 0.04);
    }

    &__path-remaining {
      stroke-width: getLoadingIndicatorSizes(path-remaining-width);
      transform: rotate(90deg);
      transform-origin: center;
      transition: getLoadingIndicatorSizes(transition-circle-path-remaining) linear all;
      fill-rule: nonzero;
      @include theme(stroke, circle-indicator-remaining-color);
      stroke-width: getLoadingIndicatorSizes(path-remaining-stroke-width);
    }

    &__label {
      @include flex(center, center);
      font-size: getLoadingIndicatorSizes(base-timer-label-size);
    }

    .LoadingIndicatorCirclePercent {
      @include center-absolute();
    }
  }

  .LoadingIndicatorRectangle {
    position: relative;
    width: getLoadingIndicatorSizes(loading-indicator-rectangle-width);

    rect {
      stroke-width: getLoadingIndicatorSizes(rectangle-stroke-width);
      transition: getLoadingIndicatorSizes(transition-all-indicator);
      fill: transparent;
      width: getLoadingIndicatorSizes(loading-indicator-rectangle-width);
      height: getLoadingIndicatorSizes(loading-indicator-rectangle-height);
    }

    .LoadingIndicatorContent {
      @include flex(space-between, null);

      position: absolute;
      top: getLoadingIndicatorSizes(loading-indicator-top);

      width: 100%;
    }
  }

  @each $color in $base-colors {
    .LoadingIndicatorCircle--#{$color} {
      .LoadingIndicatorCircle {
        &__circle {
          @include theme(stroke, #{$color});
          @include theme(fill, #{$color}, $opacity: 0.1);
        }
      }

      .LoadingIndicatorCirclePercent {
        @include theme(color, #{$color});
      }
    }

    .LoadingIndicatorRectangle--#{$color} {
      rect {
        @include theme(stroke, #{$color});
      }

      .SecondRect {
        @include theme(stroke, #{$color}, $opacity: 0.1);
      }
    }
  }
}
