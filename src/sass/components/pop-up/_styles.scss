@mixin generate-popup-styles {
	.Dialog {
		@include theme(box-shadow, box-shadow-color, 0 0 5px);
		@include flex(null, null, $direction: column);
		@include theme(background-color, primary--color);
		@include theme(color, dialog-label-color);

		position: fixed;
		left: 50%;
		top: 50%;
		z-index: getdialogsizes(dialog-z-index) + 1;
		border-radius: getdialogsizes(dialog-border-radius);
		padding: getdialogsizes(dialog-padding);
		height: auto;
		min-width: getdialogsizes(dialog-width);
		min-height: getdialogsizes(dialog-height);
		box-sizing: border-box;
		text-align: center;
		transform: translate(-50%, -50%);
		animation: dialog-animation 0.5s cubic-bezier(0.165, 0.84, 0.44, 1) forwards;

		.DialogIconContainer {
			margin: 0 auto;
			width: getdialogsizes(dialog-container-sizes);
			height: getdialogsizes(dialog-container-sizes);
		}

		.DialogLabel {
			h2 {
				margin-bottom: 0;
			}
		}

		.DialogText {
			@include theme(color, black-color);

			word-break: break-word;

			p {
				margin-bottom: 0;

				b,
				strong {
					font-weight: getdialogsizes(dialog-span-font);
				}
			}
		}

		.DialogBtnGroup {
			@include flex(center, null);

			margin-top: auto;

			button {
				&:nth-child(2) {
					margin-left: getdialogsizes(dialog-margin);
				}
			}
		}

		&--exit {
			animation: dialog-animation-exit 0.5s cubic-bezier(0.165, 0.84, 0.44, 1) forwards;
		}
	}

	.Overlay {
		z-index: getdialogsizes(dialog-z-index);
		cursor: pointer;
	}

	.Overlay,
	.DialogWrapperParent {
		@include theme(background-color, dialog-overlay-bg, $opacity: 0.5);

		position: fixed;
		left: 0;
		top: 0;
		width: 100%;
		height: 100%;
	}

	@keyframes dialog-animation-exit {
		from {
			opacity: 1;
		}

		to {
			opacity: 0;
		}
	}

	@keyframes dialog-animation {
		from {
			opacity: 0;
		}

		to {
			opacity: 1;
		}
	}
}
