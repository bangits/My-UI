@mixin generate-tooltip-styles {
  .TooltipContainer {
    position: fixed;

    opacity: 1;

    &--appear,
    & {
      .TooltipWrapper {
        // animation: dialog-animation 0.5s cubic-bezier(0.165, 0.84, 0.44, 1) forwards;
        @include animation-start;
      }
    }

    &--exit {
      .TooltipWrapper {
        // animation: dialog-animation-exit 0.5s cubic-bezier(0.165, 0.84, 0.44, 1) forwards !important;
        @include animation-exit;
      }
    }

    .TooltipWrapper {
      box-sizing: border-box;
      padding: getTooltipSizes(tooltip-wrapper-padding);
      border-radius: getTooltipSizes(tooltip-wrapper-border-radius);
      max-width: getTooltipSizes(tooltip-wrapper-max-width);
      min-width: getTooltipSizes(tooltip-wrapper-width);
      min-height: getTooltipSizes(tooltip-wrapper-height);
      width: fit-content;
      width: -moz-fit-content; //for Mozilla
      @include flex(center, center);
      text-align: left;
      word-break: break-all;

      .TooltipTriangle {
        position: absolute;
      }

      .Tooltip-bottom {
        left: 50%;
        transform: translate(-50%, -50%);
      }

      .Tooltip-left {
        transform: translate(0%, -50%) rotate(90deg);
        top: 50%;
        right: getTooltipSizes(tooltip-offset);

        .div {
          right: 0;
          transform: rotate(90deg);
        }
      }

      .Tooltip-top {
        left: 50%;
        transform: translate(-50%, 120%);

        div {
          transform: rotate(180deg);
        }
      }

      .Tooltip-right {
        transform: translate(0%, -50%) rotate(-90deg);
        left: getTooltipSizes(tooltip-offset);
        top: 50%;

        .div {
          transform: rotate(-90deg);
        }
      }
    }
  }

  @each $color in $base-colors {
    .TooltipColor--#{$color} {
      @include getTooltipStyles($color);
    }
  }
}
